#!/bin/sh

set -e

if [ -n "$UBPORTS_DEBUG" ]; then
    set -x
fi

# Copyright (C) 2021 UBports Foundation
# Author: Ratchanan Srirattanamet
# Author: Mike Gabriel
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Generate a ChangeLog file in the format of GNU ChangeLog (-ish) from git.
# Prints directly to stdout. Change directory to the git repository before
# running the script.

# colors
Color_Off='\e[0m'       # Text Reset

Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow

if ! which git 1>/dev/null; then
	echo -e "${Red}ERROR: the Git command line tool is not installed. You are being serious, aren't you???${Color_Off}"
	exit -1
fi

orig_d="$(pwd)"

d=. ; while [ ! -d ${d}/.git -a "$(readlink -e ${d})" != "/" ]; do d=${d}/..; done

if [ -d "$d/.git" ]; then

	cd ${d}

	TMPDIR=`mktemp -d`
	THIS_GIT=`pwd`
	TEMP_GIT="${TMPDIR}/$(basename ${THIS_GIT})"

	git clone --bare ${THIS_GIT} ${TEMP_GIT} 1>/dev/null 2>/dev/null

	cd ${TEMP_GIT}
	git remote remove origin
	for branch in `git branch | grep -v '*' | grep -v -E 'OTA/.*'`; do
		git branch -D "${branch}" 1> /dev/null
	done

	git --no-pager log --since "1970" \
	    --format="%as %aN%n        *%w(68,0,10) %s (%h)%d%(trailers:key=Fixes)" "$@"| awk '
	    /^[-0-9]+/ { # Would love to match date fully here, but mawk does not support {}.
	                 # Works anyway, as other lines starts with a space.
	        if (dateauthor == $0) {
	            next
	        } else {
	            # dateauthor will be blank first time around
	            if (dateauthor != "") {
	                print ""
	            }
	            print $0
	            print ""
	
	            dateauthor = $0
	            next
	        }
	    }
	    # Special case: the release changelog entry cannot have a commit hash in
	    # it. The setup is that we will create a temporary commit that produces the
	    # release, re-generate the changelog, and then amend the commit to include
	    # the ChangeLog file, which means (if only run at release time) the release
	    # commit/changelog entry is the first one, which is the second line in
	    # `git log` output.
	    NR == 2 {
	        # Again, mawk does not support {}. Abbreviated git hash is 4 or more
	        # letters, so this is to increase confidence that we are matching
	        # git hash.
	        gsub(/ \([0-9a-f][0-9a-f][0-9a-f][0-9a-f]+\)/, "", $0)
	    }
	    {
	        # Give the Fixes statement its own line.
	        gsub(/Fixes:/, "\n          Fixes:", $0)
	        print $0
	    }
	' | sed --null-data -E        \
	        -e 's/\n{3,}/\n\n/g'  \
	  | sed -E                    \
	        -e 's/\* \*/*/g'      \
	        -e 's/([[:alnum:][:punct:]]+)\ \*(\ [[:alnum:][:punct:]]+|\s*$)/\1; \2/g'     \
	        -e 's/.;\s*$/./g'     \
	  | sed -E                    \
	        -e 's/\)\(/, /g'      \
	  | sed -E                    \
	        -e 's/\s+$//g'        \
	        > ${THIS_GIT}/ChangeLog # Eliminate extra newlines, whitespaces at EOL

	cd - 1>/dev/null # coming back from TEMP_GIT

	cd ${orig_d}
fi

exit 0
